<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml" #>
<#@ output extension=".cs" #>
<# 
    // 用于存放所有 resw 的 key。
    HashSet<string> names = new HashSet<string>();
    string stringsPath = Path.Combine(GetProjectPath(), "Strings");
    string[] reswPaths;

    // 当前项目存在 Strings 文件夹。
    if(Directory.Exists(stringsPath))
    {
        // 获取 Strings 文件夹下所有的 Resources.resw 文件的路径。
        reswPaths = Directory.GetFiles(stringsPath, "Resources.resw", SearchOption.AllDirectories);
    }
    else
    {
        reswPaths = new string[0];
    }
    
    foreach(string reswPath in reswPaths)
    {
        XmlDocument document = new XmlDocument();
        document.Load(reswPath);

        // 获取 resw 文件中的 data 节点。
        XmlNodeList dataNodes = document.GetElementsByTagName("data");
        foreach(XmlElement dataNode in dataNodes)
        {
            if(dataNode != null)
            {
                string value = dataNode.GetAttribute("name");
                // key 中包含 ‘.’ 的作为控件的多语言化，不处理。
                if(!value.Contains("."))
                    names.Add(value);
            }
        }
    }
#>
<#
    if(names.Count > 0)
    {
#>
using Windows.ApplicationModel.Resources;

namespace <#=GetProjectDefaultNamespace()#>
{
    public static class LocalizedStrings
    {
        private static readonly ResourceLoader loader = ResourceLoader.GetForViewIndependentUse();
<#
            foreach(string name in names)
            {
                if(string.IsNullOrWhiteSpace(name))
                {
                    continue;
                }
#>

        public static string <#=name#>
        {
            get;
        } = loader.GetString("<#=name#>"); 
<#
            }
#>
    }
}
<#
    }
#>
<#+
    // 获取当前 T4 模板所在的工程的目录。
    public string GetProjectPath()
    {
        return Host.ResolveAssemblyReference("$(ProjectDir)");
    }

    // 获取当前 T4 模板所在的工程的默认命名空间。
    public string GetProjectDefaultNamespace()
    {
        IServiceProvider serviceProvider = (IServiceProvider)this.Host;
        EnvDTE.DTE dte = (EnvDTE.DTE)serviceProvider.GetService(typeof(EnvDTE.DTE));
        EnvDTE.Project project = (EnvDTE.Project)dte.Solution.FindProjectItem(this.Host.TemplateFile).ContainingProject;
        return project.Properties.Item("DefaultNamespace").Value.ToString();
    }
#>